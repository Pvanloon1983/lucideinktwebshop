#!/bin/bash

# Exit if anything fails
set -e

echo ">>> Starting Cloudways post-deploy script at $(date)" >> storage/logs/deploy.log

# Navigate to your app folder
cd ~/applications/uazvwffryv/public_html

# Ensure correct PHP, Composer, and NPM
PHP=$(which php)
COMPOSER=$(which composer)
NPM=$(which npm)

# Run Composer install/update (without dev dependencies)
echo ">>> Running Composer install..." >> storage/logs/deploy.log
$COMPOSER install --no-dev --optimize-autoloader --no-interaction --prefer-dist >> storage/logs/deploy.log 2>&1

# Always install Laravel Sanctum
echo ">>> Ensuring Sanctum is installed..." >> storage/logs/deploy.log
$COMPOSER require laravel/sanctum --no-interaction >> storage/logs/deploy.log 2>&1

# Run database migrations
echo ">>> Running migrations..." >> storage/logs/deploy.log
$PHP artisan migrate --force >> storage/logs/deploy.log 2>&1

# Install Node.js dependencies & build assets
if [ -f "package.json" ]; then
  echo ">>> Running npm install..." >> storage/logs/deploy.log
  $NPM install --production >> storage/logs/deploy.log 2>&1

  echo ">>> Running npm run build..." >> storage/logs/deploy.log
  $NPM run build >> storage/logs/deploy.log 2>&1
else
  echo ">>> No package.json found, skipping npm install & build..." >> storage/logs/deploy.log
fi

# Clear and rebuild Laravel caches
echo ">>> Clearing caches..." >> storage/logs/deploy.log
$PHP artisan cache:clear >> storage/logs/deploy.log 2>&1
$PHP artisan config:clear >> storage/logs/deploy.log 2>&1
$PHP artisan route:clear >> storage/logs/deploy.log 2>&1
$PHP artisan view:clear >> storage/logs/deploy.log 2>&1

echo ">>> Optimizing Laravel..." >> storage/logs/deploy.log
$PHP artisan config:cache >> storage/logs/deploy.log 2>&1
$PHP artisan route:cache >> storage/logs/deploy.log 2>&1
$PHP artisan view:cache >> storage/logs/deploy.log 2>&1

echo ">>> Deployment finished successfully at $(date)" >> storage/logs/deploy.log